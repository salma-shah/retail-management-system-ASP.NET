//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CozyComfort_ClientApplication.BlanketWebService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlanketWebService.BlanketWebServiceSoap")]
    public interface BlanketWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoMaterialID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string autoMaterialID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoMaterialID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> autoMaterialIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertMaterial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertMaterial(string materialID, string materialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertMaterial", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertMaterialAsync(string materialID, string materialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoCategoryID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string autoCategoryID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoCategoryID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> autoCategoryIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertCategory(string categoryID, string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertCategoryAsync(string categoryID, string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoBlanketID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string autoBlanketID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoBlanketID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> autoBlanketIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertBlanket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertBlanket(string blanketID, string blanketName, string categoryID, string materialID, string size, decimal price, string colour, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertBlanket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertBlanketAsync(string blanketID, string blanketName, string categoryID, string materialID, string size, decimal price, string colour, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCategoryName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getCategoryID(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getCategoryIDAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllCategories", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchCategoryByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchCategoryByID(string categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchCategoryByID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchCategoryByIDAsync(string categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchCategoryByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchCategoryByName(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchCategoryByName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchCategoryByNameAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMaterialName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getMaterialName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMaterialName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getMaterialNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMaterialID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getMaterialID(string materialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMaterialID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getMaterialIDAsync(string materialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllMaterials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllMaterialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchMaterialByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchMaterialByID(string materialID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchMaterialByID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchMaterialByIDAsync(string materialID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchMaterialByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchMaterialByName(string materialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchMaterialByName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchMaterialByNameAsync(string materialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBlanketName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBlanketNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketIDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBlanketIDs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketIDs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBlanketIDsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        decimal getBlanketPrice(string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<decimal> getBlanketPriceAsync(string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getBlanketID(string blanketName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getBlanketIDAsync(string blanketName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByIDManufacturer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByIDManufacturer(string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByIDManufacturer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByIDManufacturerAsync(string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByPriceManufacturer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByPriceManufacturer(decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByPriceManufacturer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByPriceManufacturerAsync(decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByCriteriaManufacturer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByCriteriaManufacturer(string blanketName, string blanketID, string materialID, string categoryID, string size, string colour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByCriteriaManufacturer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByCriteriaManufacturerAsync(string blanketName, string blanketID, string materialID, string categoryID, string size, string colour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByIDDistributor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByIDDistributor(string distributorID, string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByIDDistributor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByIDDistributorAsync(string distributorID, string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByPriceDistributor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByPriceDistributor(string distributorID, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByPriceDistributor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByPriceDistributorAsync(string distributorID, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByCriteriaDistributor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByCriteriaDistributor(string distributorID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByCriteriaDistributor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByCriteriaDistributorAsync(string distributorID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByPriceSeller", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByPriceSeller(string sellerID, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByPriceSeller", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByPriceSellerAsync(string sellerID, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByCriteriaSeller", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchBlanketByCriteriaSeller(string sellerID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchBlanketByCriteriaSeller", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByCriteriaSellerAsync(string sellerID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteBlanket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteBlanket(string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteBlanket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteBlanketAsync(string blanketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBlanket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateBlanket(string blanketID, string blanketName, string categoryID, string materialID, string size, string colour, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBlanket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateBlanketAsync(string blanketID, string blanketName, string categoryID, string materialID, string size, string colour, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBlanketPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateBlanketPrice(string blanketID, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBlanketPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateBlanketPriceAsync(string blanketID, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateProductionCapacity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateProductionCapacity(string blanketID, int productionCapacity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateProductionCapacity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateProductionCapacityAsync(string blanketID, int productionCapacity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateLeadTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateLeadTime(string blanketID, int leadTimeDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateLeadTime", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateLeadTimeAsync(string blanketID, int leadTimeDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllBlanketDetailsForManufacturer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllBlanketDetailsForManufacturer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllBlanketDetailsForManufacturer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllBlanketDetailsForManufacturerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllBlanketDetailsForSeller", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllBlanketDetailsForSeller(string sellerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllBlanketDetailsForSeller", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllBlanketDetailsForSellerAsync(string sellerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllBlanketDetailsForDistributor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllBlanketDetailsForDistributor(string distributorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllBlanketDetailsForDistributor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllBlanketDetailsForDistributorAsync(string distributorID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BlanketWebServiceSoapChannel : CozyComfort_ClientApplication.BlanketWebService.BlanketWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlanketWebServiceSoapClient : System.ServiceModel.ClientBase<CozyComfort_ClientApplication.BlanketWebService.BlanketWebServiceSoap>, CozyComfort_ClientApplication.BlanketWebService.BlanketWebServiceSoap {
        
        public BlanketWebServiceSoapClient() {
        }
        
        public BlanketWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlanketWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlanketWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlanketWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string autoMaterialID() {
            return base.Channel.autoMaterialID();
        }
        
        public System.Threading.Tasks.Task<string> autoMaterialIDAsync() {
            return base.Channel.autoMaterialIDAsync();
        }
        
        public string insertMaterial(string materialID, string materialName) {
            return base.Channel.insertMaterial(materialID, materialName);
        }
        
        public System.Threading.Tasks.Task<string> insertMaterialAsync(string materialID, string materialName) {
            return base.Channel.insertMaterialAsync(materialID, materialName);
        }
        
        public string autoCategoryID() {
            return base.Channel.autoCategoryID();
        }
        
        public System.Threading.Tasks.Task<string> autoCategoryIDAsync() {
            return base.Channel.autoCategoryIDAsync();
        }
        
        public string insertCategory(string categoryID, string categoryName) {
            return base.Channel.insertCategory(categoryID, categoryName);
        }
        
        public System.Threading.Tasks.Task<string> insertCategoryAsync(string categoryID, string categoryName) {
            return base.Channel.insertCategoryAsync(categoryID, categoryName);
        }
        
        public string autoBlanketID() {
            return base.Channel.autoBlanketID();
        }
        
        public System.Threading.Tasks.Task<string> autoBlanketIDAsync() {
            return base.Channel.autoBlanketIDAsync();
        }
        
        public string insertBlanket(string blanketID, string blanketName, string categoryID, string materialID, string size, decimal price, string colour, string description) {
            return base.Channel.insertBlanket(blanketID, blanketName, categoryID, materialID, size, price, colour, description);
        }
        
        public System.Threading.Tasks.Task<string> insertBlanketAsync(string blanketID, string blanketName, string categoryID, string materialID, string size, decimal price, string colour, string description) {
            return base.Channel.insertBlanketAsync(blanketID, blanketName, categoryID, materialID, size, price, colour, description);
        }
        
        public System.Data.DataSet getCategoryName() {
            return base.Channel.getCategoryName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync() {
            return base.Channel.getCategoryNameAsync();
        }
        
        public string getCategoryID(string categoryName) {
            return base.Channel.getCategoryID(categoryName);
        }
        
        public System.Threading.Tasks.Task<string> getCategoryIDAsync(string categoryName) {
            return base.Channel.getCategoryIDAsync(categoryName);
        }
        
        public System.Data.DataSet getAllCategories() {
            return base.Channel.getAllCategories();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllCategoriesAsync() {
            return base.Channel.getAllCategoriesAsync();
        }
        
        public System.Data.DataSet searchCategoryByID(string categoryID) {
            return base.Channel.searchCategoryByID(categoryID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchCategoryByIDAsync(string categoryID) {
            return base.Channel.searchCategoryByIDAsync(categoryID);
        }
        
        public System.Data.DataSet searchCategoryByName(string categoryName) {
            return base.Channel.searchCategoryByName(categoryName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchCategoryByNameAsync(string categoryName) {
            return base.Channel.searchCategoryByNameAsync(categoryName);
        }
        
        public System.Data.DataSet getMaterialName() {
            return base.Channel.getMaterialName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getMaterialNameAsync() {
            return base.Channel.getMaterialNameAsync();
        }
        
        public string getMaterialID(string materialName) {
            return base.Channel.getMaterialID(materialName);
        }
        
        public System.Threading.Tasks.Task<string> getMaterialIDAsync(string materialName) {
            return base.Channel.getMaterialIDAsync(materialName);
        }
        
        public System.Data.DataSet getAllMaterials() {
            return base.Channel.getAllMaterials();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllMaterialsAsync() {
            return base.Channel.getAllMaterialsAsync();
        }
        
        public System.Data.DataSet searchMaterialByID(string materialID) {
            return base.Channel.searchMaterialByID(materialID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchMaterialByIDAsync(string materialID) {
            return base.Channel.searchMaterialByIDAsync(materialID);
        }
        
        public System.Data.DataSet searchMaterialByName(string materialName) {
            return base.Channel.searchMaterialByName(materialName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchMaterialByNameAsync(string materialName) {
            return base.Channel.searchMaterialByNameAsync(materialName);
        }
        
        public System.Data.DataSet getBlanketName() {
            return base.Channel.getBlanketName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBlanketNameAsync() {
            return base.Channel.getBlanketNameAsync();
        }
        
        public System.Data.DataSet getBlanketIDs() {
            return base.Channel.getBlanketIDs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBlanketIDsAsync() {
            return base.Channel.getBlanketIDsAsync();
        }
        
        public decimal getBlanketPrice(string blanketID) {
            return base.Channel.getBlanketPrice(blanketID);
        }
        
        public System.Threading.Tasks.Task<decimal> getBlanketPriceAsync(string blanketID) {
            return base.Channel.getBlanketPriceAsync(blanketID);
        }
        
        public string getBlanketID(string blanketName) {
            return base.Channel.getBlanketID(blanketName);
        }
        
        public System.Threading.Tasks.Task<string> getBlanketIDAsync(string blanketName) {
            return base.Channel.getBlanketIDAsync(blanketName);
        }
        
        public System.Data.DataSet searchBlanketByIDManufacturer(string blanketID) {
            return base.Channel.searchBlanketByIDManufacturer(blanketID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByIDManufacturerAsync(string blanketID) {
            return base.Channel.searchBlanketByIDManufacturerAsync(blanketID);
        }
        
        public System.Data.DataSet searchBlanketByPriceManufacturer(decimal price) {
            return base.Channel.searchBlanketByPriceManufacturer(price);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByPriceManufacturerAsync(decimal price) {
            return base.Channel.searchBlanketByPriceManufacturerAsync(price);
        }
        
        public System.Data.DataSet searchBlanketByCriteriaManufacturer(string blanketName, string blanketID, string materialID, string categoryID, string size, string colour) {
            return base.Channel.searchBlanketByCriteriaManufacturer(blanketName, blanketID, materialID, categoryID, size, colour);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByCriteriaManufacturerAsync(string blanketName, string blanketID, string materialID, string categoryID, string size, string colour) {
            return base.Channel.searchBlanketByCriteriaManufacturerAsync(blanketName, blanketID, materialID, categoryID, size, colour);
        }
        
        public System.Data.DataSet searchBlanketByIDDistributor(string distributorID, string blanketID) {
            return base.Channel.searchBlanketByIDDistributor(distributorID, blanketID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByIDDistributorAsync(string distributorID, string blanketID) {
            return base.Channel.searchBlanketByIDDistributorAsync(distributorID, blanketID);
        }
        
        public System.Data.DataSet searchBlanketByPriceDistributor(string distributorID, decimal price) {
            return base.Channel.searchBlanketByPriceDistributor(distributorID, price);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByPriceDistributorAsync(string distributorID, decimal price) {
            return base.Channel.searchBlanketByPriceDistributorAsync(distributorID, price);
        }
        
        public System.Data.DataSet searchBlanketByCriteriaDistributor(string distributorID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour) {
            return base.Channel.searchBlanketByCriteriaDistributor(distributorID, blanketName, blanketID, materialID, categoryID, size, colour);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByCriteriaDistributorAsync(string distributorID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour) {
            return base.Channel.searchBlanketByCriteriaDistributorAsync(distributorID, blanketName, blanketID, materialID, categoryID, size, colour);
        }
        
        public System.Data.DataSet searchBlanketByPriceSeller(string sellerID, decimal price) {
            return base.Channel.searchBlanketByPriceSeller(sellerID, price);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByPriceSellerAsync(string sellerID, decimal price) {
            return base.Channel.searchBlanketByPriceSellerAsync(sellerID, price);
        }
        
        public System.Data.DataSet searchBlanketByCriteriaSeller(string sellerID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour) {
            return base.Channel.searchBlanketByCriteriaSeller(sellerID, blanketName, blanketID, materialID, categoryID, size, colour);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchBlanketByCriteriaSellerAsync(string sellerID, string blanketName, string blanketID, string materialID, string categoryID, string size, string colour) {
            return base.Channel.searchBlanketByCriteriaSellerAsync(sellerID, blanketName, blanketID, materialID, categoryID, size, colour);
        }
        
        public string deleteBlanket(string blanketID) {
            return base.Channel.deleteBlanket(blanketID);
        }
        
        public System.Threading.Tasks.Task<string> deleteBlanketAsync(string blanketID) {
            return base.Channel.deleteBlanketAsync(blanketID);
        }
        
        public string updateBlanket(string blanketID, string blanketName, string categoryID, string materialID, string size, string colour, string description) {
            return base.Channel.updateBlanket(blanketID, blanketName, categoryID, materialID, size, colour, description);
        }
        
        public System.Threading.Tasks.Task<string> updateBlanketAsync(string blanketID, string blanketName, string categoryID, string materialID, string size, string colour, string description) {
            return base.Channel.updateBlanketAsync(blanketID, blanketName, categoryID, materialID, size, colour, description);
        }
        
        public string updateBlanketPrice(string blanketID, decimal price) {
            return base.Channel.updateBlanketPrice(blanketID, price);
        }
        
        public System.Threading.Tasks.Task<string> updateBlanketPriceAsync(string blanketID, decimal price) {
            return base.Channel.updateBlanketPriceAsync(blanketID, price);
        }
        
        public string updateProductionCapacity(string blanketID, int productionCapacity) {
            return base.Channel.updateProductionCapacity(blanketID, productionCapacity);
        }
        
        public System.Threading.Tasks.Task<string> updateProductionCapacityAsync(string blanketID, int productionCapacity) {
            return base.Channel.updateProductionCapacityAsync(blanketID, productionCapacity);
        }
        
        public string updateLeadTime(string blanketID, int leadTimeDays) {
            return base.Channel.updateLeadTime(blanketID, leadTimeDays);
        }
        
        public System.Threading.Tasks.Task<string> updateLeadTimeAsync(string blanketID, int leadTimeDays) {
            return base.Channel.updateLeadTimeAsync(blanketID, leadTimeDays);
        }
        
        public System.Data.DataSet getAllBlanketDetailsForManufacturer() {
            return base.Channel.getAllBlanketDetailsForManufacturer();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllBlanketDetailsForManufacturerAsync() {
            return base.Channel.getAllBlanketDetailsForManufacturerAsync();
        }
        
        public System.Data.DataSet getAllBlanketDetailsForSeller(string sellerID) {
            return base.Channel.getAllBlanketDetailsForSeller(sellerID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllBlanketDetailsForSellerAsync(string sellerID) {
            return base.Channel.getAllBlanketDetailsForSellerAsync(sellerID);
        }
        
        public System.Data.DataSet getAllBlanketDetailsForDistributor(string distributorID) {
            return base.Channel.getAllBlanketDetailsForDistributor(distributorID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllBlanketDetailsForDistributorAsync(string distributorID) {
            return base.Channel.getAllBlanketDetailsForDistributorAsync(distributorID);
        }
    }
}
